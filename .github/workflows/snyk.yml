# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on: [push]

permissions:
  contents: read

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

      #   # For Snyk Open Source you must first set up the development environment for your application's dependencies
      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: '17'
      #     distribution: 'temurin'

      #   # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
      #   # Use || true to not fail the pipeline
      # - name: Snyk Code test
      #   run: snyk code test --sarif-file-output=snyk-code.sarif
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      #   # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk.
      # - name: Snyk Open Source monitor
      #   run: snyk monitor --all-projects
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        # Pull the docker image from GHCR for testing
      - name: Log into registry ${{ env.REGISTRY }}\
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # - name: Pull Docker image
      #   uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      #   with:
      #     context: .
      #     push: false
      #     pull: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     # labels: ${{ steps.meta.outputs.labels }}
      - name: Pull Docker image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ${{ steps.meta.outputs.tags }}
        
        # Runs Snyk Container (Container and SCA) analysis and uploads result to Snyk.
      - name: Snyk Container monitor
        run: snyk container monitor ticketmaster --file=Dockerfile
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}/${{ steps.meta.outputs.labels }}

      #   # Push the Snyk Code results into GitHub Code Scanning tab
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk-code.sarif
